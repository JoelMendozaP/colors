{"version":3,"sources":["models/theme.js","models/store.js","helpers/router.js","components/ThemeChooser.js","components/Header.js","components/ColorInput.js","components/View.js","components/Tile.js","views/Home.js","components/ColorPanels.js","views/ColorInfo.js","index.js"],"names":["Model","createSlice","name","initialState","value","reducers","toggle","state","currentTheme","theme","actions","configureStore","reducer","ThemeModel","info_url","color","path","encodeURIComponent","process","ThemeChooser","className","dispatch","useDispatch","useSelector","onClick","icon","faSun","faMoon","size","Header","showBack","children","window","history","back","faArrowAltCircleLeft","to","ColorInput","label","useState","setColor","navigate","useNavigate","onChange","e","target","style","backgroundColor","View","Tile","mode","default_colors","TileSet","colors","map","index","key","Home","produce_colors","fn","c","Color","result","hex","i","push","call","Shades","prototype","darken","Tint","whiten","Complementary","rotate","Triadic","Analogous","ColorInfo","fcolor","decodeURIComponent","createBrowserHistory","basename","ReactDOM","render","store","Store","document","getElementById"],"mappings":"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","file":"static/js/main.95417a12.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst Model = createSlice({\n    name: 'theme',\n    initialState: {\n        value: 'dark'\n    },\n    reducers: {\n        toggle: state => { state.value = state.value === 'dark'?'light':'dark'; }\n    }\n});\n\nexport const currentTheme = state => state.theme.value;\nexport const { toggle } = Model.actions;\nexport default Model.reducer;\n\n","import { configureStore } from '@reduxjs/toolkit'\nimport ThemeModel from 'models/theme';\n\nexport default configureStore({\n    reducer: {\n        theme: ThemeModel\n    }\n});","\nexport function info_url(color){\n    return path(`/info/${encodeURIComponent(color)}`);\n}\n\nexport function home(color){\n    return path(`/`);\n}\n\nexport function path(path){\n    return process.env.PUBLIC_URL + path;\n}","import 'styles/components/ThemeChooser.scss';\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggle, currentTheme } from 'models/theme';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\n\nexport default function ThemeChooser({ className }) {\n    const dispatch = useDispatch();\n    const theme = useSelector(currentTheme);\n\n    return (\n        <div className={`colors-theme-chooser ${className}`} onClick={() => dispatch(toggle())}>\n            <FontAwesomeIcon icon={theme === 'light' ? faSun : faMoon} size=\"lg\" />\n        </div>\n    )\n}","import 'styles/components/Header.scss';\n\nimport React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from '@reach/router';\n\nimport ThemeChooser from \"components/ThemeChooser\"\nimport { home } from 'helpers/router';\n\nexport default function Header({ showBack, children }) {\n    return (\n        <div className=\"colors-header\">\n            <div className=\"colors-header__wrapper\">\n                {showBack && (\n                    <div className=\"colors-header__showback\" onClick={() => window.history.back()}>\n                        <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"lg\" />\n                    </div>)}\n                <Link to={home()} className=\"colors-header__link\">\n                    <div className=\"colors-header__title\">Colors</div>\n                </Link>\n                <div className=\"colors-header__extra\">\n                    {children}\n                </div>\n                <ThemeChooser className=\"colors-header__themechooser\" />\n            </div>\n        </div>\n    )\n}","import 'styles/components/ColorInput.scss';\n\nimport React, { useState } from 'react';\nimport { useNavigate } from \"@reach/router\"\nimport { info_url } from 'helpers/router';\n\nexport function ColorInput({ className, label }) {\n    const [color, setColor] = useState(\"\");\n    const navigate = useNavigate();\n    const showColorInfo = () => {\n        if (color) {\n            navigate(info_url(color));\n        }\n    }\n    return (\n        <div className={`colors-colorinput ${className}`}>\n            <input className=\"colors-colorinput__input\" value={color} onChange={(e) => setColor(e.target.value)} />\n            <span className=\"colors-colorinput__preview\" style={{backgroundColor: color}}></span>\n            <button className=\"colors-colorinput__button\" onClick={showColorInfo}>{label}</button>\n        </div>\n    );\n}","import 'styles/components/View.scss'\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { currentTheme } from 'models/theme';\n\nimport Header from 'components/Header';\nimport { ColorInput } from './ColorInput';\n\n/**\n * \n * @param {Boolean} showBack\n * @param {String} className\n * @param {*} children\n */\nexport default function View({showBack, className, children}) {\n    let theme = useSelector(currentTheme);\n    return (<div className={`colors-view colors-${theme}-theme`}>\n        <Header showBack={showBack}>\n            <ColorInput className=\"colors-view-colorinput\" label=\"Analizar\"/>\n        </Header>\n        <div className=\"colors-view__scrollview\">\n            <div className=\"colors-view__content\">{children}</div>\n        </div>\n    </div>)\n}","import 'styles/components/Tile.scss'\n\nimport React from 'react';\nimport { Link } from '@reach/router';\n\nimport { info_url } from 'helpers/router';\n\nexport const COMPACT = \"compact\";\nexport const LARGE = \"large\";\n\n\n/**\n * @param {string} color \n */\nexport function Tile({ mode=LARGE, color }) {\n    return (<div className={`colors-tile colors-tile--${mode}`}>\n        <div className=\"colors-tile__color\" style={{ backgroundColor: color }}>\n\n        </div>\n        <div className=\"colors-tile__caption\">\n            {color}\n        </div>\n    </div>)\n};\n\nconst default_colors = ['#e0ece4', '#ff4b5c', '#056674', '#66bfbf',\n    '#f1f3de', '#eb8f8f', '#ec0101', '#cd0a0a', '#ffc93c', '#07689f',\n    '#40a8c4', '#a2d5f2', '#ff7171', '#ffaa71', '#6e6d6d'];\n/**\n * @param {String} mode;\n * @param {*} colors \n */\nexport function TileSet({ mode= LARGE, colors=default_colors }) {\n    return (\n        <div className={`colors-tileset colors-tileset--{mode}`}>\n            {colors.map((value, index) => {\n                return (\n                    <Link key={index} to={info_url(value)}>\n                        <Tile color={value} mode={mode}/>\n                    </Link>\n                );\n            })}\n        </div>\n    );\n};","import 'styles/views/Home.scss';\n\nimport React from 'react';\nimport View from 'components/View';\nimport { TileSet } from \"components/Tile\";\n\nexport default function Home() {\n    return (\n        <View>\n            <TileSet />\n        </View>\n    );\n}","import React from 'react';\nimport Color from 'color';\nimport { TileSet, COMPACT } from './Tile';\n\nfunction produce_colors(color, fn){\n    let c = Color(color);\n    const result = [c.hex()];\n    for(let i = 1; i < 11; i++){\n        result.push(fn.call(c, i/10).hex());\n    }\n    return result;\n}\n\nexport function Shades({color}){    \n    return (\n        <TileSet mode={COMPACT} colors={produce_colors(color, Color.prototype.darken)}/>\n    );\n}\n\nexport function Tint({color}){    \n    return (\n        <TileSet mode={COMPACT} colors={produce_colors(color, Color.prototype.whiten)}/>\n    );\n}\n\nexport function Complementary({color}){    \n    return (\n        <TileSet mode={COMPACT} colors={[color, Color(color).rotate(180).hex()]}/>\n    );\n}\n\nexport function Triadic({color}){    \n    return (\n        <TileSet mode={COMPACT} colors={[color, Color(color).rotate(120).hex(), Color(color).rotate(240).hex()]}/>\n    );\n}\n\nexport function Analogous({color}){    \n    return (\n        <TileSet mode={COMPACT} colors={[color, Color(color).rotate(30).hex(), Color(color).rotate(330).hex()]}/>\n    );\n}","import 'styles/views/ColorInfo.scss';\n\nimport React from 'react';\nimport Color from 'color';\nimport View from 'components/View';\nimport { Shades, Tint, Complementary, Triadic, Analogous } from 'components/ColorPanels';\n\nexport default function ColorInfo({color}) {\n    const fcolor = Color(decodeURIComponent(color)).hex();\n    return (\n        <View showBack={true}>\n            <h3>Analogous Colors</h3>\n            <Analogous  color={fcolor}/>\n            <h3>Triadic Colors</h3>\n            <Triadic color={fcolor}/>            \n            <h3>Complementary Color</h3>\n            <Complementary color={fcolor}/>\n            <h3>Shades of {fcolor}</h3>\n            <Shades color={fcolor} />\n            <h3>Tints of {fcolor}</h3>\n            <Tint color={fcolor} />\n        </View>\n    );\n}","import 'styles/index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from \"@reach/router\"\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\n\nimport Store from 'models/store';\nimport { path } from 'helpers/router';\n\nimport Home from 'views/Home';\nimport ColorInfo from 'views/ColorInfo';\n\nexport const history = createBrowserHistory({\n    basename: process.env.PUBLIC_URL\n});\n\nReactDOM.render(\n  <Provider store={Store}>\n    <Router>\n      <ColorInfo path={path('/info/:color')} />\n      <Home path={path('/')} />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}